name: "Build and Test"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x.x

      - name: Install dependencies
        run: |
          dotnet restore
          dotnet tool restore
          dotnet tool install --global dotnet-reportgenerator-globaltool
          sudo apt-get update
          sudo apt-get install -y bc

      - name: Build Project
        run: dotnet build /warnAsError

      - name: Run Tests with Coverage
        run: |
          dotnet test --no-build --collect:"XPlat Code Coverage" --results-directory:TestResults /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
          if [ $? -ne 0 ]; then
            echo "Tests failed"
            exit 1
          fi

      - name: Check Coverage Threshold
        run: |
          coverage=$(find TestResults -name "coverage.cobertura.xml" -type f -exec cat {} \; | grep -o 'line-rate="[^"]*"' | cut -d'"' -f2)
          if (( $(echo "$coverage < 1.0" | bc -l) )); then
            echo "Code coverage is below 100% (current: ${coverage})"
            exit 1
          fi
          echo "Code coverage is at 100%"

      - name: Generate Coverage Report
        run: reportgenerator -reports:"TestResults/*/coverage.cobertura.xml" -targetdir:CoverageReport

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Report
          path: ${{ github.workspace }}/CoverageReport
